GET  /                       controllers.Application.index()

# Sitemap
GET  /sitemap.xml           controllers.Application.sitemap()

# Login/logout/register/password reminder
GET  /users/login            controllers.Application.login()
POST /users/login            controllers.Application.authenticate()
GET  /users/logout           controllers.Application.logout()
GET  /users/register         controllers.Application.register()
POST /users/register         controllers.Application.createAccount()

# Browse (use query string for tags, text search ‘q’ and sorting on top of these)
GET  /modules/mine                      controllers.Modules.myModules()
# Note that featured/popular/rating are just sort params - the three entries below need revising for this
#GET  /modules/featured                  controllers.Modules.getModules(ofType = "featured")
#GET  /modules/popular                   controllers.Modules.getModules(ofType = "popular")
#GET  /modules/top-rated                 controllers.Modules.getModules(ofType = "top")
# e.g. /modules/play-1, /modules/play-1.2, /modules/play-1.2.4
GET  /modules/play-:version             controllers.Modules.getModulesByPlayVersion(version: String)
# e.g. /modules/play-1.2.4/view-templates
#GET  /modules/play-:version/:category   controllers.Modules.getModulesByCategory(version: String, category: String)
# e.g. /modules/view-templates
#GET  /modules/:category                 controllers.Modules.getModulesByCategory(version = "*", category: String)

# Submit module - changed the URL slightly because the showModuleRegistrationForm was conflicting with modules/:category
GET  /modules/my/register               controllers.Modules.showModuleRegistrationForm()
POST /modules/my/register               controllers.Modules.submitModuleRegistrationForm()
GET  /modules/my/versions/:moduleKey    controllers.Modules.showVersionManagement(moduleKey: String)
POST /modules/my/versions/:moduleKey    controllers.Modules.uploadNewVersion(moduleKey: String)

# Administrators’ interface
GET  /admin/versions                    controllers.PlayVersions.showPlayVersions()
POST /admin/versions                    controllers.PlayVersions.addNewPlayVersion()
POST /admin/versions/update             controllers.PlayVersions.update()
GET  /admin/categories                  controllers.Categories.showCategories()
POST /admin/categories                  controllers.Categories.addNewCategory()
POST /admin/categories/update           controllers.Categories.update()
GET  /admin/category/:categoryName      controllers.Categories.categoryDetails(categoryName: String)
GET  /admin/featured                    controllers.FeaturedModules.showFeaturedModules()
POST /admin/featured                    controllers.FeaturedModules.addNewFeaturedModule()
POST /admin/featured/update             controllers.FeaturedModules.update()
POST /admin/featured/delete             controllers.FeaturedModules.delete()

# Module details (the only path not containing a slash, to make the most published URL cleanest)
GET  /:moduleKey                        controllers.Modules.details(moduleKey: String)
POST /:moduleKey/voteUp                 controllers.Modules.voteUp(moduleKey: String)
POST /:moduleKey/voteDown               controllers.Modules.voteDown(moduleKey: String)
POST /:moduleKey/ratings                controllers.Modules.rate(moduleKey: String)

# Map static resources from the /public folder to the /assets URL path
GET  /assets/*file           controllers.Assets.at(path="/public", file)